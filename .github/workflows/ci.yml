name: CI

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

jobs:
  core:
    name: Test core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: ./gradlew :core:test
      - name: Change ownership of core build directory
        run: sudo chown -R $(id -u):$(id -g) ${{ github.workspace }}/core/build
      - name: Report test results
        uses: ashley-taylor/junit-report-annotations-action@master
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "${{ github.workspace }}/core/build/test-results/test/*.xml"
        if: always()

  cli:
    name: Build CLI app
    runs-on: ubuntu-latest
    needs: [core]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build CLI application
        run: ./gradlew :cli:shadowJar -x test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: JServe
          path: ${{ github.workspace }}/cli/build/libs/*.jar
        if: ${{ github.event_name != 'pull_request' }}

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [core]
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/armv7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Docker BuildKit
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - name: Docker login
        run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ github.event_name != 'pull_request' }}
      - name: Build and publish Docker image
        run: ./scripts/build-docker.sh
        env:
          JSERVE_PUBLISH: ${{ github.event_name != 'pull_request' }}
          JSERVE_BUILDX_PLATFORMS: ${{ matrix.platform }}
